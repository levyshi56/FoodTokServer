{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import express, { Express, Request, Response } from 'express';\nimport dotenv from 'dotenv';\nimport { GoogleMapAPI } from './app';\n\nconst app: Express = express();\nconst port = process.env['PORT']\ndotenv.config();\n\nconst cors = require('cors');\n\napp.use(cors({\n  origin: ['https://foodtok-1.levys1.repl.co']\n}));\n\napp.get('/', (req: Request, res: Response) => {\n  res.send(\"hello\");\n});\n\napp.get('/nearbyrestaurant', (req: Request, res: Response) => {\n  if (!req.query.lat || !req.query.long) {\n    res.send({ message: 'no lat or no long' });\n  }\n  let lat = req.query.lat;\n  let long = req.query.long;\n  let mapsAPI = new GoogleMapAPI();\n  let response = async () => {\n    await mapsAPI.getNearbyPlaces(lat, long).then(response => {\n      if (response) {\n        let restaurantName = []\n        console.log(response?.data?.results);\n        for (const restaurant of response?.data?.results) {\n          restaurantName.push(restaurant?.name);\n          console.log(restaurant.geometry.location);\n        }\n        console.log(restaurantName)\n        res.send(JSON.stringify(restaurantName));\n      }\n      else {\n        res.send({ message: \"failed\" })\n      }\n    });\n  }\n  response();\n});\n\napp.listen(port, () => {\n  console.log(`\u26A1\uFE0F[server]: Server is running at https://localhost:${port}`);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,qBAAoD;AACpD,oBAAmB;AACnB,iBAA6B;AAE7B,MAAM,MAAe;AACrB,MAAM,OAAO,QAAQ,IAAI;AACzB,sBAAO;AAEP,MAAM,OAAO,QAAQ;AAErB,IAAI,IAAI,KAAK;AAAA,EACX,QAAQ,CAAC;AAAA;AAGX,IAAI,IAAI,KAAK,CAAC,KAAc,QAAkB;AAC5C,MAAI,KAAK;AAAA;AAGX,IAAI,IAAI,qBAAqB,CAAC,KAAc,QAAkB;AAC5D,MAAI,CAAC,IAAI,MAAM,OAAO,CAAC,IAAI,MAAM,MAAM;AACrC,QAAI,KAAK,EAAE,SAAS;AAAA;AAEtB,MAAI,MAAM,IAAI,MAAM;AACpB,MAAI,OAAO,IAAI,MAAM;AACrB,MAAI,UAAU,IAAI;AAClB,MAAI,WAAW,YAAY;AACzB,UAAM,QAAQ,gBAAgB,KAAK,MAAM,KAAK,eAAY;AA1B9D;AA2BM,UAAI,WAAU;AACZ,YAAI,iBAAiB;AACrB,gBAAQ,IAAI,6CAAU,SAAV,mBAAgB;AAC5B,mBAAW,cAAc,6CAAU,SAAV,mBAAgB,SAAS;AAChD,yBAAe,KAAK,yCAAY;AAChC,kBAAQ,IAAI,WAAW,SAAS;AAAA;AAElC,gBAAQ,IAAI;AACZ,YAAI,KAAK,KAAK,UAAU;AAAA,aAErB;AACH,YAAI,KAAK,EAAE,SAAS;AAAA;AAAA;AAAA;AAI1B;AAAA;AAGF,IAAI,OAAO,MAAM,MAAM;AACrB,UAAQ,IAAI,gEAAsD;AAAA;",
  "names": []
}
