{
  "version": 3,
  "sources": ["../app.ts"],
  "sourcesContent": ["import axios from 'axios';\n\nconst API_KEY = process.env['GOOGLE_API_KEY']\nconsole.log(API_KEY);\n\nclass GoogleMapAPI {\n  currentCoordConfig = {\n    url: 'https://www.googleapis.com/geolocation/v1/geolocate?key=' + API_KEY,\n    body: \"\",\n    method: \"POST\"\n  };\n\n\n  async getCurrentCoordinate() {\n    let response = await axios(this.currentCoordConfig);\n    return [response.data.location.lat.toString(), response.data.location.lng.toString()];\n  }\n\n  async getCurrentAddress() {\n    let [lat, long] = await this.getCurrentCoordinate();\n    let latStr = lat.toString();\n    let longStr = long.toString();\n    let url = 'https://maps.googleapis.com/maps/api/geocode/json'\n    const parameter = { params: { latlng: latStr + ',' + longStr, key: API_KEY, result_type: 'street_address' } };\n    let response = await axios.post(url, null, parameter);\n    if (response.data.results) {\n      return response.data.results[0].formatted_address\n    }\n    return null;\n  }\n\n  async getNearbyPlaces(lat: string, long: string) {\n    const url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json';\n    const parameter = {\n      params: {\n        opennow: '',\n        type: 'restaurant',\n        radius: '50000',\n        location: lat + ',' + long,\n        key: API_KEY\n      }\n    };\n    console.log(parameter.params);\n    let response = await axios.get(url, parameter).catch((error) => {\n      console.log(error);\n    });\n    return response;\n  }\n}\n\nexport { GoogleMapAPI };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,MAAM,UAAU,QAAQ,IAAI;AAC5B,QAAQ,IAAI;AAEZ,mBAAmB;AAAA,EACjB,qBAAqB;AAAA,IACnB,KAAK,6DAA6D;AAAA,IAClE,MAAM;AAAA,IACN,QAAQ;AAAA;AAAA,QAIJ,uBAAuB;AAC3B,QAAI,WAAW,MAAM,0BAAM,KAAK;AAChC,WAAO,CAAC,SAAS,KAAK,SAAS,IAAI,YAAY,SAAS,KAAK,SAAS,IAAI;AAAA;AAAA,QAGtE,oBAAoB;AACxB,QAAI,CAAC,KAAK,QAAQ,MAAM,KAAK;AAC7B,QAAI,SAAS,IAAI;AACjB,QAAI,UAAU,KAAK;AACnB,QAAI,MAAM;AACV,UAAM,YAAY,EAAE,QAAQ,EAAE,QAAQ,SAAS,MAAM,SAAS,KAAK,SAAS,aAAa;AACzF,QAAI,WAAW,MAAM,qBAAM,KAAK,KAAK,MAAM;AAC3C,QAAI,SAAS,KAAK,SAAS;AACzB,aAAO,SAAS,KAAK,QAAQ,GAAG;AAAA;AAElC,WAAO;AAAA;AAAA,QAGH,gBAAgB,KAAa,MAAc;AAC/C,UAAM,MAAM;AACZ,UAAM,YAAY;AAAA,MAChB,QAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU,MAAM,MAAM;AAAA,QACtB,KAAK;AAAA;AAAA;AAGT,YAAQ,IAAI,UAAU;AACtB,QAAI,WAAW,MAAM,qBAAM,IAAI,KAAK,WAAW,MAAM,CAAC,UAAU;AAC9D,cAAQ,IAAI;AAAA;AAEd,WAAO;AAAA;AAAA;",
  "names": []
}
